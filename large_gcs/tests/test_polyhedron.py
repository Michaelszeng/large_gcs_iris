import numpy as np

from large_gcs.geometry.polyhedron import Polyhedron
from large_gcs.graph.incremental_contact_graph import IncrementalContactGraph
from large_gcs.graph_generators.contact_graph_generator import (
    ContactGraphGeneratorParams,
)


def test_should_not_create_nullspace_polyhedron_if_infeasible():
    # This polyhedron is infeasible (empty)
    # fmt: off
    A = np.array([[ 0., 0.,-1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0.,-1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [-1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0.,-1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,-1.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0.,-1., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.,
                0.,-1., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,-1.,
                0., 1., 0.],
            [ 0., 0., 0., 0., 0., 0.,-1., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0.,-1., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 1., 0., 0., 0.,-1., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0.,-1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 1., 0., 0., 0.,-1., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0.,-1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [-1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 1., 0., 0., 0.,-1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0.,-1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 1., 0., 0., 0.,-1., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                -1., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0.,-1.],
            [ 1.,-1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [-1., 1., 0., 0., 0., 0., 0., 0.,-1., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 1.,-1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0.,-1., 1., 0., 0., 0., 0., 0.,-1., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0.,-1., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1.,
                0., 0.,-1.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0.,-1., 0., 0., 0., 0.,-1.,
                0., 0., 1.],
            [ 0., 0., 0., 0., 1.,-1., 0., 0., 0., 0., 1., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0.,-1., 1., 0., 0., 0., 0.,-1., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 1.,-1., 0., 0., 0., 1., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0.,-1., 1., 0., 0., 0.,-1., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.,-1., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,-1., 0., 1., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.,-1., 0.,
                1., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,-1., 0., 1., 0.,
                -1., 0., 0.],
            [ 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [-1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0.,-1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0.,-1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0.,-1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0.,-1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0.,-1., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0.,-1., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0.,-1., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                1., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 1., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 1.],
            [-1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0.,-1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0.,-1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0.,-1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0.,-1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0.,-1., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0.,-1., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0.,-1., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0.,-1., 0., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0.,-1., 0., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,-1., 0., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,-1., 0., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,-1., 0., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,-1., 0.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,-1.,
                0., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                -1., 0., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0.,-1., 0.],
            [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0.,-1.]])
    b = np.array([ 1.50000000e+00,-1.50000000e+00, 1.50000000e+00,
            -1.50000000e+00,-5.00000003e-01, 1.50000000e+00,
            -5.00000003e-01, 1.50000000e+00,-0.00000000e+00,
            -0.00000000e+00,-0.00000000e+00,-0.00000000e+00,
            -2.33332409e+00,-2.33332409e+00, 1.16667591e+00,
            -1.16667591e+00, 1.16667591e+00,-1.16667591e+00,
                6.66682237e-01, 3.33317763e-01, 6.66682237e-01,
                3.33317763e-01,-0.00000000e+00,-0.00000000e+00,
            -0.00000000e+00,-0.00000000e+00,-0.00000000e+00,
            -0.00000000e+00,-0.00000000e+00,-0.00000000e+00,
            -0.00000000e+00,-0.00000000e+00,-0.00000000e+00,
            -0.00000000e+00,-0.00000000e+00,-0.00000000e+00,
            -0.00000000e+00,-0.00000000e+00,-0.00000000e+00,
            -0.00000000e+00, 4.50000000e+00, 3.50000000e+00,
                4.50000000e+00, 3.50000000e+00, 4.50000000e+00,
                3.50000000e+00, 4.50000000e+00, 3.50000000e+00,
                4.66668223e+00, 3.33332409e+00, 4.83331777e+00,
                3.66667591e+00, 4.66668223e+00, 3.33332409e+00,
                4.83331777e+00, 3.66667591e+00, 1.00000000e+03,
                1.00000000e+03, 1.00000000e+03, 1.00000000e+03,
                1.00000000e+03, 1.00000000e+03, 1.00000000e+03,
                1.00000000e+03, 1.00000000e+03, 1.00000000e+03,
                1.00000000e+03, 1.00000000e+03, 1.00000000e+03,
                1.00000000e+03, 1.00000000e+03, 1.00000000e+03,
                1.00000000e+03, 1.00000000e+03, 1.00000000e+03,
                1.00000000e+03, 1.00000000e+03, 1.00000000e+03,
                1.00000000e+03, 1.00000000e+03, 1.00000000e+03,
                1.00000000e+03, 1.00000000e+03, 1.00000000e+03,
                1.00000000e+03, 1.00000000e+03, 1.00000000e+03,
                1.00000000e+03, 1.00000000e+03, 1.00000000e+03,
                1.00000000e+03, 1.00000000e+03])
    # fmt: on
    P = Polyhedron(A=A, b=b)
    assert not hasattr(P, "_null_space_polyhedron")


def test_removes_near_zero_rows_from_A_and_b():
    """
    Make sure that the near-zero rows are removed from A and b so that we do not create extra
    layers of null space polyhedrons.
    This does not test it explicitly, but when the near-zero rows are not removed this test fails
    because an extra layer of null space polyhedron is created.

    This A and b are from the contact set created in the following way:
    graph_file = ContactGraphGeneratorParams.inc_graph_file_path_from_name("cg_maze_b1")
    cg = IncrementalContactGraph.load_from_file(
        graph_file,
        should_incl_simul_mode_switches=False,
        should_add_const_edge_cost=True,
        should_add_gcs=True,
    )

    contact_pair_mode_ids = ('IC|obs0_v0-obj0_f2', 'NC|obs0_f0-rob0_v1', 'IC|obj0_f1-rob0_f1')
    contact_set = cg._create_contact_set_from_contact_pair_mode_ids(contact_pair_mode_ids)
    """
    # fmt: off
    A = np.array([[0.,0.,-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,-1.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,-1.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,1.,0.,-1.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,-1.,0.,1.,0.],[0.,0.,0.,0.,-0.78374588,0.,0.62108164,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,-0.78374588,0.,0.62108164,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[-1.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[1.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,-1.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,1.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,-1.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,1.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,-1.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,1.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,-1.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,-1.],[1.,-1.,0.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[-1.,1.,0.,0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,1.,-1.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,-1.,1.,0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.,0.,0.,1.],[0.,0.,0.,0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.,0.,0.,-1.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,-1.,0.,0.,0.],[0.,0.,0.,0.,1.,-1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,-1.,1.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,1.,-1.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,-1.,1.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,1.,0.,-1.,0.,0.,-1.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,-1.,0.,1.,0.,0.,1.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,1.,0.,-1.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,-1.,0.,1.,0.,0.,0.,0.],[1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,1.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,1.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,1.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,1.],[-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,-1.,0.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,-1.,0.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,-1.,0.],[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,-1.]])
    b = np.array([4.32100000e+00,-4.32100000e+00,4.32100000e+00,-4.32100000e+00,-1.86000000e+00,2.86000000e+00,-1.86000000e+00,2.86000000e+00,-0.00000000e+00,-0.00000000e+00,-0.00000000e+00,-0.00000000e+00,-1.06820936e+00,-1.06820936e+00,6.66682241e-01,-6.66682241e-01,6.66682241e-01,-6.66682241e-01,8.33324081e-01,1.16667592e+00,8.33324081e-01,1.16667592e+00,-0.00000000e+00,-0.00000000e+00,-0.00000000e+00,-0.00000000e+00,-0.00000000e+00,-0.00000000e+00,-0.00000000e+00,-0.00000000e+00,-0.00000000e+00,-0.00000000e+00,-0.00000000e+00,-0.00000000e+00,-0.00000000e+00,-0.00000000e+00,-0.00000000e+00,-0.00000000e+00,-0.00000000e+00,-0.00000000e+00,4.50000000e+00,4.50000000e+00,4.50000000e+00,4.50000000e+00,4.50000000e+00,4.50000000e+00,4.50000000e+00,4.50000000e+00,4.66668224e+00,4.33332408e+00,4.83331776e+00,4.66667592e+00,4.66668224e+00,4.33332408e+00,4.83331776e+00,4.66667592e+00,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03,1.00000000e+03])
    # fmt: on
    P = Polyhedron(A, b)
    assert not P._null_space_polyhedron._has_equality_constraints
    P.get_samples(5)


def test_chebyshev_center_in_set():
    graph_file = ContactGraphGeneratorParams.inc_graph_file_path_from_name("cg_maze_b1")
    cg = IncrementalContactGraph.load_from_file(
        graph_file,
        should_incl_simul_mode_switches=False,
        should_add_const_edge_cost=True,
        should_add_gcs=True,
    )

    contact_pair_mode_ids = (
        "IC|obs0_f0-obj0_v3",
        "NC|obs0_f0-rob0_v1",
        "NC|obj0_f1-rob0_f1",
    )
    contact_set = cg._create_contact_set_from_contact_pair_mode_ids(
        contact_pair_mode_ids
    )

    convex_set = contact_set
    convex_set.set.IsBounded(), convex_set.set.IsEmpty(), convex_set._polyhedron._null_space_polyhedron.set.IsBounded(), convex_set._polyhedron._null_space_polyhedron.set.IsEmpty()
    prev_sample = convex_set._polyhedron._null_space_polyhedron.set.ChebyshevCenter()
    set = convex_set._polyhedron._null_space_polyhedron.set
    A = set.A()
    b = set.b().reshape(-1, 1)
    prev_sample = prev_sample.reshape(-1, 1)
    violation = A @ prev_sample - b
    # Find any rows greater or equal to 0
    violating_rows = violation[np.where(violation >= 0)]
    violating_rows

    # prev_sample = set.MaybeGetFeasiblePoint()
    assert set.PointInSet(prev_sample, tol=0)
