hydra:
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params:
      graph_name: cg_simple_4, cg_stackpush_d2, cg_maze_b1
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
    loggers:
      large_gcs:
        level: INFO
      large_gcs.graph:
        level: INFO
      large_gcs.algorithms:
        level: DEBUG
      large_gcs.cost_estimators:
        level: INFO
      large_gcs.domination_checkers:
        level: DEBUG
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra: []
    task: []
  job:
    name: run_contact_graph_experiment
    chdir: null
    override_dirname: ''
    id: ???
    num: ???
    config_name: reaches_cheaper_eps_suboptimal_sampling
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: /home/rebecca/Documents/code/clones/large_gcs
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/rebecca/Documents/code/clones/large_gcs/config/WAFR_experiments
      schema: file
      provider: main
    - path: /home/rebecca/Documents/code/clones/large_gcs/config
      schema: file
      provider: command-line
    - path: ''
      schema: structured
      provider: schema
    output_dir: ???
    choices:
      hydra: hydra
      domination_checker: reaches_cheaper_last_pos_sampling
      cost_estimator: shortcut_edge
      algorithm: gcs_star
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
algorithm:
  _target_: large_gcs.algorithms.gcs_star.GcsAstarReachability
  should_terminate_early: false
  should_invert_S: true
cost_estimator:
  _target_: large_gcs.cost_estimators.shortcut_edge_ce.ShortcutEdgeCE
  shortcut_edge_cost_factory: large_gcs.graph.contact_cost_constraint_factory.contact_shortcut_edge_l1_norm_cost_factory_over_obj_weighted
domination_checker:
  _target_: large_gcs.domination_checkers.sampling_last_pos.ReachesCheaperLastPosSampling
  num_samples_per_vertex: 1
  should_use_candidate_sol: false
graph_name: cg_trichal4
should_use_incremental_graph: true
should_incl_simul_mode_switches: false
should_add_const_edge_cost: true
should_use_l1_norm_vertex_cost: true
save_visualization: true
save_solution: true
save_metrics: true
save_to_wandb: true
